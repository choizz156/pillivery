buildscript {
    ext {
        springBootVersion = '2.7.5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE"
    }


}

plugins {
    id "org.sonarqube" version "6.0.1.5171"
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'server'
    version = '0.0.1'
    sourceCompatibility = '11'
    targetCompatibility = '11'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        //lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        //spring
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation 'org.codehaus.groovy:groovy-all:3.0.18'

        //log
        implementation 'net.logstash.logback:logstash-logback-encoder:6.1'
        implementation 'org.slf4j:slf4j-api:1.7.36'
        implementation 'ch.qos.logback:logback-classic:1.2.11'

        //aop
        implementation 'org.springframework.boot:spring-boot-starter-aop'

        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3'

        //actuator
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

    }

    test {
        useJUnitPlatform()
    }
}

project(':module-core') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':module-external-api')
        implementation project(':module-redis')
        implementation project(':module-logging')
    }
}

project(':module-api') {
    bootJar {
        enabled = true
        archiveFileName = "${project.name}-boot.jar"
    }
    jar { enabled = false }

    dependencies {
        implementation project(':module-core')
        implementation project(':module-admin')
        implementation project(':module-external-api')
        implementation project(':module-redis')
        implementation project(':module-event')
        implementation project(':module-logging')
    }
}

project(':module-batch') {
    bootJar {
        enabled = true
        archiveFileName = "${project.name}-boot.jar"
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        into('BOOT-INF/classes') {
            from sourceSets.main.output.classesDirs
            include 'com/team33/modulebatch/**'
            include 'com/team33/modulecore/core/order/domain/**'
            include 'com/team33/modulecore/core/item/domain/**'
        }
    }
    jar { enabled = true }

    dependencies {
        implementation project(':module-logging')
    }
}

project(':module-admin') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':module-redis')
        implementation project(':module-core')
        implementation project(':module-logging')
    }
}

project(':module-external-api') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':module-logging')
    }
}

project(':module-event') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':module-external-api')
        implementation project(':module-redis')
        implementation project(':module-core')
        implementation project(':module-logging')
    }
}

project(':module-redis') {
    bootJar { enabled = false}
    jar { enabled = true }

    dependencies {
        implementation project(':module-logging')
    }
}

project(':module-logging') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
    }
}