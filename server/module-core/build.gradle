
dependencies {

    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //redis
    implementation 'org.redisson:redisson-spring-boot-starter:3.22.0'
    implementation 'com.github.codemonstur:embedded-redis:1.4.3'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //db
    runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java'

    //mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    //password-seucirty
    implementation 'org.springframework.security:spring-security-crypto'

    //expiringMap
    implementation 'net.jodah:expiringmap:0.5.11'

    //cache
    implementation 'com.github.ben-manes.caffeine:guava:3.2.0'

    //fixuture-monkey
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.14")
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-javax-validation:1.0.14")
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-jackson:1.0.14")

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //lombok
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    testImplementation 'org.awaitility:awaitility:4.2.0'

}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main {
        java {
            srcDirs += [generated]
        }
    }
    test {
        java {
            srcDirs -= [generated]  // generated 디렉토리를 테스트 소스 세트에서 제거
        }
    }
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}